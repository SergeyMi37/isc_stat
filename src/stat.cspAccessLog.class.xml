<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="stat.cspAccessLog">
<Description>
class to view csp server requests using SQL</Description>
<Super>%Persistent</Super>
<TimeCreated>65553,58587.766348</TimeCreated>

<Property name="ReqId">
<Description>
csp server request id, generated by stat.csp</Description>
<Type>%String</Type>
</Property>

<Property name="gwReqId">
<Description>
cspgw request id originally in hex, storage slot 7</Description>
<Type>%String</Type>
</Property>

<Property name="duration">
<Description>
time spent to process http request, storage slot 8</Description>
<Type>%String</Type>
</Property>

<Property name="tsStart">
<Description>
time start of http processing, storage slot 9</Description>
<Type>%String</Type>
</Property>

<Property name="tsEnd">
<Description>
time end of http processing, storage slot 10</Description>
<Type>%String</Type>
</Property>

<Property name="url">
<Description>
storage slot 11</Description>
<Type>%String</Type>
</Property>

<Property name="method">
<Description>
storage slot 12</Description>
<Type>%String</Type>
</Property>

<Property name="NS">
<Description>
namespace slot 13</Description>
<Type>%String</Type>
</Property>

<Property name="class">
<Description>
storage slot 14</Description>
<Type>%String</Type>
</Property>

<Property name="cspapp">
<Description>
storage slot 15</Description>
<Type>%String</Type>
</Property>

<Property name="cliip">
<Description>
WebClient ip, storage slot 16</Description>
<Type>%String</Type>
</Property>

<Property name="cliport">
<Description>
WebCLietn port, storage slot 17</Description>
<Type>%String</Type>
</Property>

<Property name="gwhost">
<Description>
host of cspgw and webserver host/ip, storage slot 18</Description>
<Type>%String</Type>
</Property>

<Property name="gwport">
<Description>
port of cspgw and webserver, storage slot 19</Description>
<Type>%String</Type>
</Property>

<Property name="SessionId">
<Description>
csp session id, storage slot 2</Description>
<Type>%String</Type>
</Property>

<Property name="SessionStart">
<Description>
session start flag, storage slot 3</Description>
<Type>%Boolean</Type>
</Property>

<Property name="SessionEnd">
<Description>
session end flag, storage slot 4</Description>
<Type>%Boolean</Type>
</Property>

<Property name="inSessionId">
<Description>
incoming session id(in coockie or CSPCHD request argument),storage slot 5</Description>
<Type>%String</Type>
</Property>

<Property name="LicenseId">
<Description>
license id of the session, storage slot 6</Description>
<Type>%String</Type>
</Property>

<Property name="tokens">
<Description>
number of COS ?tokens/lines? executed, storage slot 20</Description>
<Type>%String</Type>
</Property>

<Property name="GloRef">
<Description>
global accessed during request execution, storage slot 21</Description>
<Type>%String</Type>
</Property>

<Property name="GloUpd">
<Description>
globals updates during request execution, storage slot 22</Description>
<Type>%String</Type>
</Property>

<Property name="PhyRd">
<Description>
physical read during request execution, storage slot 23</Description>
<Type>%String</Type>
</Property>

<Property name="cpurun">
<Description>
time to run</Description>
<Type>%BigInt</Type>
</Property>

<Property name="cpurunqueue">
<Description>
time to wait in runqueue</Description>
<Type>%BigInt</Type>
</Property>

<Property name="cputimeslices">
<Description>
number of timeslices for process</Description>
<Type>%Integer</Type>
</Property>

<Index name="id">
<IdKey>1</IdKey>
<Properties>ReqId</Properties>
<Unique>1</Unique>
</Index>

<Method name="LoadFromCSPServerLog">
<Description><![CDATA[
load csp.log fron file into cache<br/>
in order to have SQL processing<br/>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>file</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 open file:("RS"):0.1 if $test=0 quit -1
 set oldeof=$SYSTEM.Process.SetZEOF(1)
 use file
 read hdr1
 read hdr2
 for {
   read tx quit:$zeof=-1
   set ts=$P(tx,",",1)
   set reqid=$P(tx,",",2)
   set state=$P(tx,",",3)
   if state="s" {
     set sessionid=$P(tx,",",4)
     set gwReqId=$P(tx,",",5)
     set jid=$P(tx,",",6)
     set pid=$P(tx,",",7)
     set url=$P(tx,",",8)
     set ns=$P(tx,",",9)
     set class=$P(tx,",",10)
     set cspapp=$P(tx,",",11)
     set method=$P(tx,",",12)
     set cliip=$P(tx,",",13)
     set cliport=$P(tx,",",14)
     set gwhost=$P(tx,",",15)
     set gwport=$P(tx,",",16)
     set ^|"^^"_$zu(12)_"cache"|stat.csp(reqid)=$LB(,,,,sessionid/*5inSessionId*/,,gwReqId/*7*/,,ts/*9*/,,url/*11*/,method/*12*/,ns,class,cspapp,cliip,cliport,gwhost,gwport)
   }
   elseif state="e" {
     set ts=$P(tx,",",1)
     set reqid=$P(tx,",",2)
     set data=$G(^|"^^"_$zu(12)_"cache"|stat.csp(reqid))
     set sessionid=$P(tx,",",4)/*sessionid*/
     set $LI(data,2)=sessionid
     set $LI(data,3)=$P(tx,",",6)/*session start*/
     set $LI(data,4)=$P(tx,",",7)/*session end*/
     set $LI(data,6)=$P(tx,",",5)/*license id*/
     set $LI(data,8)=$P(tx,",",8)/*duration*/
     set $LI(data,10)=ts/*tsEnd*/
     set $LI(data,20)=$P(tx,",",9)/*tokens*/
     set $LI(data,21)=$P(tx,",",10)/*GloRef*/
     set $LI(data,22)=$P(tx,",",11)/*GloUpd*/
     set $LI(data,23)=$P(tx,",",12)/*PhyRd*/
     set ^|"^^"_$zu(12)_"cache"|stat.csp(reqid)=data
   }
 }
 use 0 close file
 quit 1
]]></Implementation>
</Method>

<Method name="ExportToCSPServerLog">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 open file:("RS"):0.1 if $test=0 quit -1
 set oldeof=$SYSTEM.Process.SetZEOF(1)
 use file
 read hdr1
 read hdr2
 for {
   read tx quit:$zeof=-1
   set ts=$P(tx,",",1)
   set reqid=$P(tx,",",2)
   set state=$P(tx,",",3)
   if state="s" {
     set sessionid=$P(tx,",",4)
     set gwReqId=$P(tx,",",5)
     set jid=$P(tx,",",6)
     set pid=$P(tx,",",7)
     set url=$P(tx,",",8)
     set ns=$P(tx,",",9)
     set class=$P(tx,",",10)
     set cspapp=$P(tx,",",11)
     set method=$P(tx,",",12)
     set cliip=$P(tx,",",13)
     set cliport=$P(tx,",",14)
     set gwhost=$P(tx,",",15)
     set gwport=$P(tx,",",16)
     set ^|"^^"_$zu(12)_"cache"|stat.csp(reqid)=$LB(,,,,sessionid/*5refusedsessionid*/,,gwReqId/*7*/,,ts/*9*/,,url/*11*/,method/*12*/,ns,class,cspapp,cliip,cliport,gwhost,gwport)
   }
   elseif state="e" {
     set ts=$P(tx,",",1)
     set reqid=$P(tx,",",2)
     set data=$G(^|"^^"_$zu(12)_"cache"|stat.csp(reqid))
     set sessionid=$P(tx,",",4)/*sessionid*/
     set $LI(data,2)=sessionid
     set refusedsesiondi=$LI(data,5)
     if sessionid=refusedsessionid set $LI(data,5)=""
     set $LI(data,3)=$P(tx,",",6)/*session start*/
     set $LI(data,4)=$P(tx,",",7)/*session end*/
     set $LI(data,6)=$P(tx,",",5)/*license id*/
     set $LI(data,8)=$P(tx,",",8)/*duration*/
     set $LI(data,10)=ts/*tsEnd*/
     set $LI(data,20)=$P(tx,",",9)/*tokens*/
     set $LI(data,21)=$P(tx,",",10)/*GloRef*/
     set $LI(data,22)=$P(tx,",",11)/*GloUpd*/
     set $LI(data,23)=$P(tx,",",12)/*PhyRd*/
     set $LI(data,24)=$P(tx,",",13)/*cpurun*/
     set $LI(data,25)=$P(tx,",",14)/*cpurunqueue*/
     set $LI(data,26)=$P(tx,",",15)/*cputimeslices*/
     set ^|"^^"_$zu(12)_"cache"|stat.csp(reqid)=data
   }
 }
 use 0 close file
 quit 1
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^|"^^"_$zu(12)_"cache"|stat.csp</DataLocation>
<DefaultData>StatCSPAccessLog</DefaultData>
<IdLocation>^|"^^"_$zu(12)_"cache"|stat.csp.id</IdLocation>
<IndexLocation>^stat.csp.I</IndexLocation>
<StreamLocation>^stat.csp.S</StreamLocation>
<Data name="StatCSPAccessLog">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>SessionId</Value>
</Value>
<Value name="3">
<Value>SessionStart</Value>
</Value>
<Value name="4">
<Value>SessionEnd</Value>
</Value>
<Value name="5">
<Value>inSessionId</Value>
</Value>
<Value name="6">
<Value>LicenseId</Value>
</Value>
<Value name="7">
<Value>gwReqId</Value>
</Value>
<Value name="8">
<Value>duration</Value>
</Value>
<Value name="9">
<Value>tsStart</Value>
</Value>
<Value name="10">
<Value>tsEnd</Value>
</Value>
<Value name="11">
<Value>url</Value>
</Value>
<Value name="12">
<Value>method</Value>
</Value>
<Value name="13">
<Value>NS</Value>
</Value>
<Value name="14">
<Value>class</Value>
</Value>
<Value name="15">
<Value>cspapp</Value>
</Value>
<Value name="16">
<Value>cliip</Value>
</Value>
<Value name="17">
<Value>cliport</Value>
</Value>
<Value name="18">
<Value>gwhost</Value>
</Value>
<Value name="19">
<Value>gwport</Value>
</Value>
<Value name="20">
<Value>tokens</Value>
</Value>
<Value name="21">
<Value>GloRef</Value>
</Value>
<Value name="22">
<Value>GloUpd</Value>
</Value>
<Value name="23">
<Value>PhyRd</Value>
</Value>
<Value name="24">
<Value>cpurun</Value>
</Value>
<Value name="25">
<Value>cpurunqueue</Value>
</Value>
<Value name="26">
<Value>cputimeslices</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
